%-
%include PercepioTrace_Files.prg
%-

%-Driver generated by the Component Wizard
%-
%- WARNING !
%-
%- Do not make changes to these lines (if you make some changes, you damage this driver)
%- which begins with:
%-
%-  %-STARTUSERTYPES
%-  %-ENDUSRTYPES
%-  /* END %ModuleName. */
%-  /* MODULE %ModuleName. */
%-  %-INTERNAL_METHOD_BEG
%-  %-INTERNAL_METHOD_END
%-  %-INHERITED_EVENT_BEGIN
%-  %-INHERITED_EVENT_END
%-  %-BW_METHOD_BEGIN
%-  %-BW_METHOD_END
%-  %-BW_DEFINITION_START
%-  %-BW_DEFINITION_END
%-  %-BW_IMPLEMENT_START
%-  %-BW_IMPLEMENT_END
%-  %-BW_EVENT_DEFINITION_START
%-  %-BW_EVENT_DEFINITION_END
%-  %-BW_EVENT_IMPLEMENT_START
%-  %-BW_EVENT_IMPLEMENT_END
%-  %-BW_METHOD_MACROS_START
%-  %-BW_METHOD_MACROS_END
%-  %-BW_SECTIONS_INSERT
%-  %-BW_INTERN_COMMENTS_START
%-  %-BW_INTERN_COMMENTS_END
%-  %-BW_BEAN_CONSTANTS_START
%-  %-BW_BEAN_CONSTANTS_END
%-
%-
%- These lines are not comments, but they are necessary for Component Wizard
%- If you change these lines, Component Wizard will not be responsible for loosing or damaging your code!
%-
%-
%- readyCPU ...
%- readyDEVICE ...
%-
%define DriverAuthor  Author
%define DriverVersion 01.00
%define DriverDate    16.03.2012
%-
%-
%-BW_METHOD_MACROS_START
%-BW_METHOD_MACROS_END
%-
%-BW_INTERN_COMMENTS_START
%- List of descriptions of internal methods
%-BW_INTERN_COMMENTS_END
%-
%-BW_SECTIONS_INSERT
%if Language='ANSIC'
%-
%-
%INTERFACE
%define! Settings Common\PercepioTraceSettings.Inc
%define! Abstract Common\PercepioTraceAbstract.Inc
%include Common\Header.h

#ifndef __%'ModuleName'_HvTraceInitTraceData
#define __%'ModuleName'_H

/* MODULE %ModuleName. */

%ifdef SharedModules
/* Include shared modules, which are used for whole project */
  %for var from IncludeSharedModules
#include "%'var'.h"
  %endfor
%endif
/* Include inherited beans */
%ifdef InhrSymbolList
  %for var from InhrSymbolList
#include "%@%var@ModuleName.h"
  %endfor
%endif
%-BW_CUSTOM_INCLUDE_START_H
%- Write your own includes here ...
%-   Example:
%-     #include "header_name.h"
%-
%-BW_CUSTOM_INCLUDE_END_H
%-
%-BW_METHOD_MACROS_START
%-BW_METHOD_MACROS_END

#include "%ProcessorModule.h"
%if defined(StreamingTraceWithRTT) & %StreamingTraceWithRTT='yes'
#include "trcRecorder.h" /* streaming trace with RTT */
%else
#include "trcUser.h" /* traditional recorder, without streaming over RTT */
%endif

%-STARTUSERTYPES - Do not make changes between lines (included this lines) marked with %-STARTUSERTYPES and %-ENDUSRTYPES

%-ENDUSRTYPES
%-BW_BEAN_CONSTANTS_START  - Do not make changes between lines (included this lines) marked with %-BW_BEAN_CONSTANTS_START and %-BW_BEAN_CONSTANTS_END
%- No constants defined in the BeanWizard for this bean
%-BW_BEAN_CONSTANTS_END
%-BW_CUSTOM_USERTYPE_START
%- Write your own types here ...
%-  Example:
%-    typedef int TMyInteger;
%-
%-BW_CUSTOM_USERTYPE_END
%-BW_DEFINITION_START
%-************************************************************************************************************
%-BW_METHOD_BEGIN uiTraceGetTraceBufferSize
%ifdef uiTraceGetTraceBufferSize
#define %'ModuleName'%.%uiTraceGetTraceBufferSize() \
  uiTraceGetTraceBufferSize()

%define! RetVal
%include Common\PercepioTraceuiTraceGetTraceBufferSize.Inc

%endif %- uiTraceGetTraceBufferSize
%-BW_METHOD_END uiTraceGetTraceBufferSize
%-************************************************************************************************************
%-BW_METHOD_BEGIN vTraceGetTraceBuffer
%ifdef vTraceGetTraceBuffer
#define %'ModuleName'%.%vTraceGetTraceBuffer() \
  vTraceGetTraceBuffer()

%define! RetVal
%include Common\PercepioTracevTraceGetTraceBuffer.Inc

%endif %- vTraceGetTraceBuffer
%-BW_METHOD_END vTraceGetTraceBuffer
%-************************************************************************************************************
%-BW_METHOD_BEGIN vTraceSetTimerFrequency
%ifdef vTraceSetTimerFrequency
#define %'ModuleName'%.%vTraceSetTimerFrequency(frequency) \
  vTraceSetTimerFrequency(frequency)

%define! Parfrequency
%include Common\PercepioTracevTraceSetTimerFrequency.Inc

%endif %- vTraceSetTimerFrequency
%-BW_METHOD_END vTraceSetTimerFrequency
%-************************************************************************************************************
%-BW_METHOD_BEGIN uiTraceStart
%ifdef uiTraceStart
#define %'ModuleName'%.%uiTraceStart() \
  uiTraceStart()
%define! RetVal
%include Common\PercepioTraceuiTraceStart.Inc

%endif %- uiTraceStart
%-BW_METHOD_END uiTraceStart
%-************************************************************************************************************
%-BW_METHOD_BEGIN vTraceStop
%ifdef vTraceStop
#define %'ModuleName'%.%vTraceStop() \
  vTraceStop()

%include Common\PercepioTracevTraceStop.Inc

%endif %- vTraceStop
%-BW_METHOD_END vTraceStop
%-************************************************************************************************************
%-BW_METHOD_BEGIN vTraceClear
%ifdef vTraceClear
#define %'ModuleName'%.%vTraceClear() \
  vTraceClear()

%include Common\PercepioTracevTraceClear.Inc

%endif %- vTraceClear
%-BW_METHOD_END vTraceClear
%-************************************************************************************************************
%-BW_METHOD_BEGIN xTraceOpenLabel
%ifdef xTraceOpenLabel
#define %'ModuleName'%.%xTraceOpenLabel(label) \
  xTraceOpenLabel(label)

%define! Parlabel
%define! RetVal
%include Common\PercepioTracexTraceOpenLabel.Inc

%endif %- xTraceOpenLabel
%-BW_METHOD_END xTraceOpenLabel
%-************************************************************************************************************
%-BW_METHOD_BEGIN vTraceUserEvent
%ifdef vTraceUserEvent
#define %'ModuleName'%.%vTraceUserEvent(eventLabel) \
  vTraceUserEvent(eventLabel)

%define! PareventLabel
%include Common\PercepioTracevTraceUserEvent.Inc

%endif %- vTraceUserEvent
%-BW_METHOD_END vTraceUserEvent
%-************************************************************************************************************
%-BW_METHOD_BEGIN vTracePrintF
%ifdef vTracePrintF
/* void %'ModuleName'%.%vTracePrintF(traceLabel eventLabel, char *formatStr, ...); */
#define %'ModuleName'%.%vTracePrintF vTracePrintF

%define! PareventLabel
%define! ParformatStr
%define! ParVariable_1
%include Common\PercepioTracevTracePrintF.Inc

%endif %- vTracePrintF
%-BW_METHOD_END vTracePrintF
%-************************************************************************************************************
%-BW_METHOD_BEGIN vTraceSetQueueName
%ifdef vTraceSetQueueName
#define %'ModuleName'%.%vTraceSetQueueName(queue, name) \
  vTraceSetQueueName(queue, name)

%define! Parqueue
%define! Parname
%include Common\PercepioTracevTraceSetQueueName.Inc

%endif %- vTraceSetQueueName
%-BW_METHOD_END vTraceSetQueueName
%-************************************************************************************************************
%-BW_METHOD_BEGIN vTraceSetISRProperties
%ifdef vTraceSetISRProperties
#define %'ModuleName'%.%vTraceSetISRProperties(handle, name, prioritiy) \
  vTraceSetISRProperties(handle, name, prioritiy)

%define! Parhandle
%define! Parname
%define! Parprioritiy
%include Common\PercepioTracevTraceSetISRProperties.Inc

%endif %- vTraceSetISRProperties
%-BW_METHOD_END vTraceSetISRProperties
%-************************************************************************************************************
%-BW_METHOD_BEGIN vTraceStoreISRBegin
%ifdef vTraceStoreISRBegin
#define %'ModuleName'%.%vTraceStoreISRBegin(id) \
  vTraceStoreISRBegin(id)

%define! Parid
%include Common\PercepioTracevTraceStoreISRBegin.Inc

%endif %- vTraceStoreISRBegin
%-BW_METHOD_END vTraceStoreISRBegin
%-************************************************************************************************************
%-BW_METHOD_BEGIN vTraceStoreISREnd
%ifdef vTraceStoreISREnd
#define %'ModuleName'%.%vTraceStoreISREnd(pendingISR) \
  vTraceStoreISREnd(pendingISR)

%define! ParpendingISR
%include Common\PercepioTracevTraceStoreISREnd.Inc

%endif %- vTraceStoreISREnd
%-BW_METHOD_END vTraceStoreISREnd
%-************************************************************************************************************
%-BW_METHOD_BEGIN vTraceTaskSkipDefaultInstanceFinishedEvents
%ifdef vTraceTaskSkipDefaultInstanceFinishedEvents
#define %'ModuleName'%.%vTraceTaskSkipDefaultInstanceFinishedEvents() \
  vTraceTaskSkipDefaultInstanceFinishedEvents()

%include Common\PercepioTracevTraceTaskSkipDefaultInstanceFinishedEvents.Inc

%endif %- vTraceTaskSkipDefaultInstanceFinishedEvents
%-BW_METHOD_END vTraceTaskSkipDefaultInstanceFinishedEvents
%-************************************************************************************************************
%-BW_METHOD_BEGIN vTraceTaskInstanceIsFinished
%ifdef vTraceTaskInstanceIsFinished
#define %'ModuleName'%.%vTraceTaskInstanceIsFinished() \
  vTraceTaskInstanceIsFinished()

%include Common\PercepioTracevTraceTaskInstanceIsFinished.Inc

%endif %- vTraceTaskInstanceIsFinished
%-BW_METHOD_END vTraceTaskInstanceIsFinished
%-************************************************************************************************************
%-BW_METHOD_BEGIN vTraceExcludeTaskFromSchedulingTrace
%ifdef vTraceExcludeTaskFromSchedulingTrace
#define %'ModuleName'%.%vTraceExcludeTaskFromSchedulingTrace(name) \
  vTraceExcludeTaskFromSchedulingTrace(name)

%define! Parname
%include Common\PercepioTracevTraceExcludeTaskFromSchedulingTrace.Inc

%endif %- vTraceExcludeTaskFromSchedulingTrace
%-BW_METHOD_END vTraceExcludeTaskFromSchedulingTrace
%-************************************************************************************************************
%-BW_METHOD_BEGIN vTraceInitTraceData
%ifdef vTraceInitTraceData
#define %'ModuleName'%.%vTraceInitTraceData() \
  vTraceInitTraceData()

%define! RetVal
%include Common\PercepioTracevTraceInitTraceData.Inc

%endif %- vTraceInitTraceData
%-BW_METHOD_END vTraceInitTraceData
%-************************************************************************************************************
%-BW_METHOD_BEGIN vGetGDBDumpCommand
%ifdef vGetGDBDumpCommand
void %'ModuleName'%.%vGetGDBDumpCommand(uint8_t *buf, uint16_t bufSize, uint8_t *fileName);
%define! Parbuf
%define! ParbufSize
%define! ParfileName
%include Common\PercepioTracevGetGDBDumpCommand.Inc

%endif %- vGetGDBDumpCommand
%-BW_METHOD_END vGetGDBDumpCommand
%-************************************************************************************************************
%-BW_METHOD_BEGIN vTraceSetStopHook
%ifdef vTraceSetStopHook
#define %'ModuleName'%.%vTraceSetStopHook(stopHookFunction) \
  vTraceSetStopHook(stopHookFunction)
%define! ParstopHookFunction
%include Common\PercepioTracevTraceSetStopHook.Inc

%endif %- vTraceSetStopHook
%-BW_METHOD_END vTraceSetStopHook
%-************************************************************************************************************
%-BW_METHOD_BEGIN xTraceGetLastError
%ifdef xTraceGetLastError
#define %'ModuleName'%.%xTraceGetLastError() \
  %xTraceGetLastError()
%define! RetVal
%include Common\PercepioTracexTraceGetLastError.Inc

%endif %- xTraceGetLastError
%-BW_METHOD_END xTraceGetLastError
%-************************************************************************************************************
%-BW_METHOD_BEGIN vTraceClearError
%ifdef vTraceClearError
#define %'ModuleName'%.%vTraceClearError(resetErrorMessage) \
  vTraceClearError(resetErrorMessage)
%define! ParresetErrorMessage
%define! RetVal
%include Common\PercepioTracevTraceClearError.Inc

%endif %- vTraceClearError
%-BW_METHOD_END vTraceClearError
%-************************************************************************************************************
%-BW_METHOD_BEGIN vTraceTaskInstanceFinish
%ifdef vTraceTaskInstanceFinish
#define %'ModuleName'%.%vTraceTaskInstanceFinish() \
  vTraceTaskInstanceFinish() \
%include Common\PercepioTracevTraceTaskInstanceFinish.Inc

%endif %- vTraceTaskInstanceFinish
%-BW_METHOD_END vTraceTaskInstanceFinish
%-************************************************************************************************************
%-BW_METHOD_BEGIN vTraceTaskInstanceFinishDirect
%ifdef vTraceTaskInstanceFinishDirect
#define %'ModuleName'%.%vTraceTaskInstanceFinishDirect() \
  vTraceTaskInstanceFinishDirect()
%include Common\PercepioTracevTraceTaskInstanceFinishDirect.Inc

%endif %- vTraceTaskInstanceFinishDirect
%-BW_METHOD_END vTraceTaskInstanceFinishDirect
%-BW_DEFINITION_END
/* END %ModuleName. */

#endif
/* ifndef __%'ModuleName'_H */
%include Common\Header.End
%-
%-BW_EVENT_DEFINITION_START
%-BW_METHOD_BEGIN OnTraceStop
%ifdef OnTraceStop
%INTERFACE OnTraceStop
void %OnTraceStop(void);
%include Common\PercepioTraceOnTraceStop.Inc

%endif %- OnTraceStop
%-BW_METHOD_END OnTraceStop
%-BW_METHOD_BEGIN OnTraceStart
%ifdef OnTraceStart
%INTERFACE OnTraceStart
void %OnTraceStart(void);
%include Common\PercepioTraceOnTraceStart.Inc

%endif %- OnTraceStart
%-BW_METHOD_END OnTraceStart
%-BW_METHOD_BEGIN OnTraceWrap
%ifdef OnTraceWrap
%INTERFACE OnTraceWrap
void %OnTraceWrap(void);
%include Common\PercepioTraceOnTraceWrap.Inc

%endif %- OnTraceWrap
%-BW_METHOD_END OnTraceWrap
%-BW_EVENT_DEFINITION_END
%IMPLEMENTATION
%define! Settings Common\PercepioTraceSettings.Inc
%define! Abstract Common\PercepioTraceAbstract.Inc
%include Common\Header.C

/* MODULE %ModuleName. */

%for var from EventModules
#include "%var.h"
%endfor
#include "%'ModuleName'.h"
%-BW_CUSTOM_INCLUDE_START_M
%- Write your own includes here ...
%-   Example:
%-     #include "header_name.h"
%-
%-BW_CUSTOM_INCLUDE_END_M

%-BW_CUSTOM_VARIABLE_START
%- Write your static variables here
%-   Example:
%-     static int counter1;
%-     int %'ModuleName'%.counter2;
%-
%-BW_CUSTOM_VARIABLE_END
%-BW_INTERN_METHOD_DECL_START
%- List of internal methods headers
%-BW_INTERN_METHOD_DECL_END
%-BW_IMPLEMENT_START
%-************************************************************************************************************
%-BW_METHOD_BEGIN uiTraceGetTraceBufferSize
%ifdef uiTraceGetTraceBufferSize
%define! RetVal
%include Common\PercepioTraceuiTraceGetTraceBufferSize.Inc
/*
dword %'ModuleName'%.%uiTraceGetTraceBufferSize(void)
{
  *** Implemented as macro in the header file
}
*/

%endif %- uiTraceGetTraceBufferSize
%-BW_METHOD_END uiTraceGetTraceBufferSize
%-************************************************************************************************************
%-BW_METHOD_BEGIN vTraceGetTraceBuffer
%ifdef vTraceGetTraceBuffer
%define! RetVal
%include Common\PercepioTracevTraceGetTraceBuffer.Inc
/*
void* %'ModuleName'%.%vTraceGetTraceBuffer(void)
{
  *** Implemented as macro in the header file
}
*/

%endif %- vTraceGetTraceBuffer
%-BW_METHOD_END vTraceGetTraceBuffer
%-************************************************************************************************************
%-BW_METHOD_BEGIN vTraceSetTimerFrequency
%ifdef vTraceSetTimerFrequency
%define! Parfrequency
%include Common\PercepioTracevTraceSetTimerFrequency.Inc
/*
void %'ModuleName'%.%vTraceSetTimerFrequency(dword frequency)
{
  *** Implemented as macro in the header file
}
*/

%endif %- vTraceSetTimerFrequency
%-BW_METHOD_END vTraceSetTimerFrequency
%-************************************************************************************************************
%-BW_METHOD_BEGIN uiTraceStart
%ifdef uiTraceStart
%define! RetVal
%include Common\PercepioTraceuiTraceStart.Inc
/*
dword %'ModuleName'%.%uiTraceStart(void)
{
  *** Implemented as macro in the header file
}
*/

%endif %- uiTraceStart
%-BW_METHOD_END uiTraceStart
%-************************************************************************************************************
%-BW_METHOD_BEGIN vTraceStop
%ifdef vTraceStop
%include Common\PercepioTracevTraceStop.Inc
/*
void %'ModuleName'%.%vTraceStop(void)
{
  *** Implemented as macro in the header file
}
*/

%endif %- vTraceStop
%-BW_METHOD_END vTraceStop
%-************************************************************************************************************
%-BW_METHOD_BEGIN vTraceClear
%ifdef vTraceClear
%include Common\PercepioTracevTraceClear.Inc
/*
void %'ModuleName'%.%vTraceClear(void)
{
  *** Implemented as macro in the header file
}
*/

%endif %- vTraceClear
%-BW_METHOD_END vTraceClear
%-************************************************************************************************************
%-BW_METHOD_BEGIN xTraceOpenLabel
%ifdef xTraceOpenLabel
%define! Parlabel
%define! RetVal
%include Common\PercepioTracexTraceOpenLabel.Inc
/*
traceLabel %'ModuleName'%.%xTraceOpenLabel(char *label)
{
  *** Implemented as macro in the header file
}
*/

%endif %- xTraceOpenLabel
%-BW_METHOD_END xTraceOpenLabel
%-************************************************************************************************************
%-BW_METHOD_BEGIN vTraceUserEvent
%ifdef vTraceUserEvent
%define! PareventLabel
%include Common\PercepioTracevTraceUserEvent.Inc
/*
void %'ModuleName'%.%vTraceUserEvent(traceLabel eventLabel)
{
  *** Implemented as macro in the header file
}
*/

%endif %- vTraceUserEvent
%-BW_METHOD_END vTraceUserEvent
%-************************************************************************************************************
%-BW_METHOD_BEGIN vTracePrintF
%ifdef vTracePrintF
%define! PareventLabel
%define! ParformatStr
%define! ParVariable_1
%include Common\PercepioTracevTracePrintF.Inc
/*
void %'ModuleName'%.%vTracePrintF(traceLabel eventLabel, char *formatStr, ...)
{
  *** Implemented as macro in the header file
}
*/

%endif %- vTracePrintF
%-BW_METHOD_END vTracePrintF
%-************************************************************************************************************
%-************************************************************************************************************
%-BW_METHOD_BEGIN vTraceSetQueueName
%ifdef vTraceSetQueueName
%define! Parqueue
%define! Parname
%include Common\PercepioTracevTraceSetQueueName.Inc
/*
void %'ModuleName'%.%vTraceSetQueueName(void *queue, char *name)
{
  *** Implemented as macro in the header file
}
*/

%endif %- vTraceSetQueueName
%-BW_METHOD_END vTraceSetQueueName
%-************************************************************************************************************
%-BW_METHOD_BEGIN vTraceSetISRProperties
%ifdef vTraceSetISRProperties
%define! Parhandle
%define! Parname
%define! Parprioritiy
%include Common\PercepioTracevTraceSetISRProperties.Inc
/*
void %'ModuleName'%.%vTraceSetISRProperties(objectHandleType handle, char *name, char prioritiy)
{
  *** Implemented as macro in the header file
}
*/

%endif %- vTraceSetISRProperties
%-BW_METHOD_END vTraceSetISRProperties
%-************************************************************************************************************
%-BW_METHOD_BEGIN vTraceStoreISRBegin
%ifdef vTraceStoreISRBegin
%define! Parid
%include Common\PercepioTracevTraceStoreISRBegin.Inc
/*
void %'ModuleName'%.%vTraceStoreISRBegin(objectHandleType id)
{
  *** Implemented as macro in the header file
}
*/

%endif %- vTraceStoreISRBegin
%-BW_METHOD_END vTraceStoreISRBegin
%-************************************************************************************************************
%-BW_METHOD_BEGIN vTraceStoreISREnd
%ifdef vTraceStoreISREnd
%define! ParpendingISR
%include Common\PercepioTracevTraceStoreISREnd.Inc
/*
void %'ModuleName'%.%vTraceStoreISREnd(int pendingISR)
{
  *** Implemented as macro in the header file
}
*/

%endif %- vTraceStoreISREnd
%-BW_METHOD_END vTraceStoreISREnd
%-************************************************************************************************************
%-BW_METHOD_BEGIN vTraceTaskSkipDefaultInstanceFinishedEvents
%ifdef vTraceTaskSkipDefaultInstanceFinishedEvents
%include Common\PercepioTracevTraceTaskSkipDefaultInstanceFinishedEvents.Inc
/*
void %'ModuleName'%.%vTraceTaskSkipDefaultInstanceFinishedEvents(void)
{
  *** Implemented as macro in the header file
}
*/

%endif %- vTraceTaskSkipDefaultInstanceFinishedEvents
%-BW_METHOD_END vTraceTaskSkipDefaultInstanceFinishedEvents
%-************************************************************************************************************
%-BW_METHOD_BEGIN vTraceTaskInstanceIsFinished
%ifdef vTraceTaskInstanceIsFinished
%include Common\PercepioTracevTraceTaskInstanceIsFinished.Inc
/*
void %'ModuleName'%.%vTraceTaskInstanceIsFinished(void)
{
  *** Implemented as macro in the header file
}
*/

%endif %- vTraceTaskInstanceIsFinished
%-BW_METHOD_END vTraceTaskInstanceIsFinished
%-************************************************************************************************************
%-BW_METHOD_BEGIN vTraceExcludeTaskFromSchedulingTrace
%ifdef vTraceExcludeTaskFromSchedulingTrace
%define! Parname
%include Common\PercepioTracevTraceExcludeTaskFromSchedulingTrace.Inc
/*
void %'ModuleName'%.%vTraceExcludeTaskFromSchedulingTrace(const char* name)
{
  *** Implemented as macro in the header file
}
*/

%endif %- vTraceExcludeTaskFromSchedulingTrace
%-BW_METHOD_END vTraceExcludeTaskFromSchedulingTrace
%-************************************************************************************************************
%-BW_METHOD_BEGIN vTraceInitTraceData
%ifdef vTraceInitTraceData
%define! RetVal
%include Common\PercepioTracevTraceInitTraceData.Inc
/*
void* %'ModuleName'%.%vTraceInitTraceData(void)
{
  *** Implemented as macro in the header file
}
*/

%endif %- vTraceInitTraceData
%-BW_METHOD_END vTraceInitTraceData
%-************************************************************************************************************
%-BW_METHOD_BEGIN vGetGDBDumpCommand
%ifdef vGetGDBDumpCommand
%define! Parbuf
%define! ParbufSize
%define! ParfileName
%include Common\PercepioTracevGetGDBDumpCommand.Inc
void %'ModuleName'%.%vGetGDBDumpCommand(uint8_t *buf, uint16_t bufSize, uint8_t *fileName)
{
#if TRC_CONFIG_USE_RTT_STREAMING
  /* with RTT streaming, there is no trace buffer */
  *buf = '\0';
#else
  /* construct gdb command string: dump binary memory <file> <hexStartAddr> <hexEndAddr> */
  uint8_t *ptr; /* pointer to data */
  size_t len; /* size/length of data */

  ptr = (uint8_t*)%'ModuleName'%.%vTraceGetTraceBuffer();
  len = %'ModuleName'%.%uiTraceGetTraceBufferSize();
  %@Utility@'ModuleName'%.strcpy(buf, bufSize, (unsigned char*)"dump binary memory ");
  %@Utility@'ModuleName'%.strcat(buf, bufSize, fileName);
  %@Utility@'ModuleName'%.strcat(buf, bufSize, (unsigned char*)" 0x");
  %@Utility@'ModuleName'%.strcatNum32Hex(buf, bufSize, (uint32_t)ptr);
  %@Utility@'ModuleName'%.strcat(buf, bufSize, (unsigned char*)" 0x");
  %@Utility@'ModuleName'%.strcatNum32Hex(buf, bufSize, (uint32_t)(ptr+len));
#endif
}

%endif %- vGetGDBDumpCommand
%-BW_METHOD_END vGetGDBDumpCommand
%-************************************************************************************************************
%-BW_METHOD_BEGIN vTraceSetStopHook
%ifdef vTraceSetStopHook
%define! ParstopHookFunction
%include Common\PercepioTracevTraceSetStopHook.Inc
/*
void %'ModuleName'%.%vTraceSetStopHook(TRACE_STOP_HOOK stopHookFunction)
{
  *** Implemented as macro in the header file
}
*/

%endif %- vTraceSetStopHook
%-BW_METHOD_END vTraceSetStopHook
%-************************************************************************************************************
%-BW_METHOD_BEGIN xTraceGetLastError
%ifdef xTraceGetLastError
%define! RetVal
%include Common\PercepioTracexTraceGetLastError.Inc
/*
char* %'ModuleName'%.%xTraceGetLastError(void)
{
  *** Implemented as macro in the header file
}
*/

%endif %- xTraceGetLastError
%-BW_METHOD_END xTraceGetLastError
%-************************************************************************************************************
%-BW_METHOD_BEGIN vTraceClearError
%ifdef vTraceClearError
%define! ParresetErrorMessage
%define! RetVal
%include Common\PercepioTracevTraceClearError.Inc
/*
byte %'ModuleName'%.%vTraceClearError(int resetErrorMessage)
{
  *** Implemented as macro in the header file
}
*/

%endif %- vTraceClearError
%-BW_METHOD_END vTraceClearError
%-************************************************************************************************************
%-BW_METHOD_BEGIN vTraceTaskInstanceFinish
%ifdef vTraceTaskInstanceFinish
%include Common\PercepioTracevTraceTaskInstanceFinish.Inc
/*
void %'ModuleName'%.%vTraceTaskInstanceFinish(void)
{
  *** Implemented as macro in the header file
}
*/

%endif %- vTraceTaskInstanceFinish
%-BW_METHOD_END vTraceTaskInstanceFinish
%-************************************************************************************************************
%-BW_METHOD_BEGIN vTraceTaskInstanceFinishDirect
%ifdef vTraceTaskInstanceFinishDirect
%include Common\PercepioTracevTraceTaskInstanceFinishDirect.Inc
/*
void %'ModuleName'%.%vTraceTaskInstanceFinishDirect(void)
{
  *** Implemented as macro in the header file
}
*/

%endif %- vTraceTaskInstanceFinishDirect
%-BW_METHOD_END vTraceTaskInstanceFinishDirect
%-BW_IMPLEMENT_END
/* END %ModuleName. */

%include Common\Header.End
%-
%-
%-BW_EVENT_IMPLEMENT_START
%-BW_METHOD_BEGIN OnTraceStop
%ifdef OnTraceStop
%IMPLEMENTATION OnTraceStop
%include Common\PercepioTraceOnTraceStop.Inc
void %OnTraceStop(void)
{
  /* Write your code here ... */
}

%endif %- OnTraceStop
%-BW_METHOD_END OnTraceStop
%-BW_METHOD_BEGIN OnTraceStart
%ifdef OnTraceStart
%IMPLEMENTATION OnTraceStart
%include Common\PercepioTraceOnTraceStart.Inc
void %OnTraceStart(void)
{
  /* Write your code here ... */
}

%endif %- OnTraceStart
%-BW_METHOD_END OnTraceStart
%-BW_METHOD_BEGIN OnTraceWrap
%ifdef OnTraceWrap
%IMPLEMENTATION OnTraceWrap
%include Common\PercepioTraceOnTraceWrap.Inc
void %OnTraceWrap(void)
{
#if 0 /* default implementation for gdb below ... */
  /* Write your code here ... */
  uint8_t buf[64];

  /* GDB: dump binary memory <file> <hexStartAddr> <hexEndAddr> */
  %'ModuleName'%.%vGetGDBDumpCommand(buf, sizeof(buf), "c:\\tmp\\trc.dump");
#endif
}

%endif %- OnTraceWrap
%-BW_METHOD_END OnTraceWrap
%-BW_EVENT_IMPLEMENT_END
%INITIALIZATION
  /* ### %DeviceType "%DeviceName" init code ... */
%CODE_BEGIN
 %- %'ModuleName'%.vTraceInitTraceData(); /* this needs to be called in PEX_RTOS_INIT()! */
%CODE_END
%ENABLE
%CODE_BEGIN
%CODE_END
%-
%else %- Language (& Compiler)
  %error^ This component is not implemented in selected language & compiler !
%endif %- Language (& Compiler)
%DEBUG
%ALL_SYMBOLS
%-
