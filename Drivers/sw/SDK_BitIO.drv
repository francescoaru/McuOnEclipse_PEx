%-Driver generated by the Component Wizard
%-
%- WARNING !
%-
%- Do not make changes to these lines (if you make some changes, you damage this driver)
%- which begins with:
%-
%-  %-STARTUSERTYPES
%-  %-ENDUSRTYPES
%-  /* END %ModuleName. */
%-  /* MODULE %ModuleName. */
%-  %-INTERNAL_METHOD_BEG
%-  %-INTERNAL_METHOD_END 
%-  %-INHERITED_EVENT_BEGIN
%-  %-INHERITED_EVENT_END
%-  %-BW_METHOD_BEGIN
%-  %-BW_METHOD_END
%-  %-BW_DEFINITION_START
%-  %-BW_DEFINITION_END
%-  %-BW_IMPLEMENT_START
%-  %-BW_IMPLEMENT_END
%-  %-BW_EVENT_DEFINITION_START
%-  %-BW_EVENT_DEFINITION_END
%-  %-BW_EVENT_IMPLEMENT_START
%-  %-BW_EVENT_IMPLEMENT_END
%-  %-BW_METHOD_MACROS_START
%-  %-BW_METHOD_MACROS_END
%-  %-BW_SECTIONS_INSERT
%-  %-BW_INTERN_COMMENTS_START
%-  %-BW_INTERN_COMMENTS_END
%-  %-BW_BEAN_CONSTANTS_START
%-  %-BW_BEAN_CONSTANTS_END
%-
%-
%- These lines are not comments, but they are necessary for Component Wizard
%- If you change these lines, Component Wizard will not be responsible for loosing or damaging your code!
%-
%-
%- readyCPU ...
%- readyDEVICE ...
%-
%define DriverAuthor  Author
%define DriverVersion 01.00
%define DriverDate    09.03.2016
%-
%-
%-BW_METHOD_MACROS_START
%-BW_METHOD_MACROS_END
%-
%-BW_INTERN_COMMENTS_START
%- List of descriptions of internal methods
%-BW_INTERN_COMMENTS_END
%-
%-BW_SECTIONS_INSERT
%if Language='ANSIC'
%-
%-
%INTERFACE
%define! Settings Common\SDK_BitIOSettings.Inc
%define! Abstract Common\SDK_BitIOAbstract.Inc
%include Common\Header.h

#ifndef __%'ModuleName'_H
#define __%'ModuleName'_H

/* MODULE %ModuleName. */
/* Include inherited beans */
%ifdef InhrSymbolList
  %for var from InhrSymbolList
#include "%@%var@ModuleName.h"
  %endfor
%endif

#if %@sdk@'ModuleName'%.SDK_VERSION_USED == %@sdk@'ModuleName'%.SDK_VERSION_NONE
%ifdef SharedModules
/* Include shared modules, which are used for whole project */
  %for var from IncludeSharedModules
  #include "%'var'.h"
  %endfor
%endif
%-BW_CUSTOM_INCLUDE_START_H
%- Write your own includes here ...
%-   Example:
%-     #include "header_name.h"
%-
%-BW_CUSTOM_INCLUDE_END_H
%-
%-BW_METHOD_MACROS_START
%-BW_METHOD_MACROS_END
  #include "%ProcessorModule.h"
#endif
%-STARTUSERTYPES - Do not make changes between lines (included this lines) marked with %-STARTUSERTYPES and %-ENDUSRTYPES

%-ENDUSRTYPES
%-BW_BEAN_CONSTANTS_START  - Do not make changes between lines (included this lines) marked with %-BW_BEAN_CONSTANTS_START and %-BW_BEAN_CONSTANTS_END
%- No constants defined in the BeanWizard for this bean
%-BW_BEAN_CONSTANTS_END
%-BW_CUSTOM_USERTYPE_START
%- Write your own types here ...
%-  Example:
%-    typedef int TMyInteger;
%-
%-BW_CUSTOM_USERTYPE_END


%-BW_DEFINITION_START
%-************************************************************************************************************
%-BW_METHOD_BEGIN Init
%ifdef Init
void %'ModuleName'%.%Init(void);
%include Common\SDK_BitIOInit.Inc

%endif %- Init
%-BW_METHOD_END Init
%-************************************************************************************************************
%-BW_METHOD_BEGIN ClrVal
%ifdef ClrVal
void %'ModuleName'%.%ClrVal(void);
%include Common\SDK_BitIOClrVal.Inc

%endif %- ClrVal
%-BW_METHOD_END ClrVal
%-************************************************************************************************************
%-BW_METHOD_BEGIN SetVal
%ifdef SetVal
void %'ModuleName'%.%SetVal(void);
%include Common\SDK_BitIOSetVal.Inc

%endif %- SetVal
%-BW_METHOD_END SetVal
%-************************************************************************************************************
%-BW_METHOD_BEGIN NegVal
%ifdef NegVal
void %'ModuleName'%.%NegVal(void);
%include Common\SDK_BitIONegVal.Inc

%endif %- NegVal
%-BW_METHOD_END NegVal
%-************************************************************************************************************
%-BW_METHOD_BEGIN Deinit
%ifdef Deinit
void %'ModuleName'%.%Deinit(void);
%include Common\SDK_BitIODeinit.Inc

%endif %- Deinit
%-BW_METHOD_END Deinit
%-************************************************************************************************************
%-BW_METHOD_BEGIN GetVal
%ifdef GetVal
bool %'ModuleName'%.%GetVal(void);
%define! RetVal
%include Common\SDK_BitIOGetVal.Inc

%endif %- GetVal
%-BW_METHOD_END GetVal
%-************************************************************************************************************
%-BW_METHOD_BEGIN GetDir
%ifdef GetDir
bool %'ModuleName'%.%GetDir(void);
%define! RetVal
%include Common\SDK_BitIOGetDir.Inc

%endif %- GetDir
%-BW_METHOD_END GetDir
%-************************************************************************************************************
%-BW_METHOD_BEGIN SetDir
%ifdef SetDir
void %'ModuleName'%.%SetDir(bool Dir);
%define! ParDir
%include Common\SDK_BitIOSetDir.Inc

%endif %- SetDir
%-BW_METHOD_END SetDir
%-************************************************************************************************************
%-BW_METHOD_BEGIN SetInput
%ifdef SetInput
void %'ModuleName'%.%SetInput(void);
%include Common\SDK_BitIOSetInput.Inc

%endif %- SetInput
%-BW_METHOD_END SetInput
%-************************************************************************************************************
%-BW_METHOD_BEGIN SetOutput
%ifdef SetOutput
void %'ModuleName'%.%SetOutput(void);
%include Common\SDK_BitIOSetOutput.Inc

%endif %- SetOutput
%-BW_METHOD_END SetOutput
%-************************************************************************************************************
%-BW_METHOD_BEGIN PutVal
%ifdef PutVal
void %'ModuleName'%.%PutVal(bool Val);
%define! ParVal
%include Common\SDK_BitIOPutVal.Inc

%endif %- PutVal
%-BW_METHOD_END PutVal
%-BW_DEFINITION_END
/* END %ModuleName. */

#endif
/* ifndef __%'ModuleName'_H */
%include Common\Header.End
%-
%-BW_EVENT_DEFINITION_START
%-BW_EVENT_DEFINITION_END
%IMPLEMENTATION
%define! Settings Common\SDK_BitIOSettings.Inc
%define! Abstract Common\SDK_BitIOAbstract.Inc
%include Common\Header.C

/* MODULE %ModuleName. */

%for var from EventModules
#include "%var.h"
%endfor
#include "%'ModuleName'.h"
%-BW_CUSTOM_INCLUDE_START_M
%- Write your own includes here ...
%-   Example:
%-     #include "header_name.h"
#if %@sdk@'ModuleName'%.SDK_VERSION_USED == %@sdk@'ModuleName'%.SDK_VERSION_2_0
  #include "fsl_gpio.h" /* include SDK header file for GPIO */
#elif %@sdk@'ModuleName'%.SDK_VERSION_USED == %@sdk@'ModuleName'%.SDK_VERSION_NONE
  #error "This component only works with the Kinetis SDK!"
#endif
%-
%-BW_CUSTOM_INCLUDE_END_M

%-BW_CUSTOM_VARIABLE_START
%- Write your static variables here
%-   Example:
%-     static int counter1;
%-     int %'ModuleName'%.counter2;
#define %'ModuleName'%.PortName   %PortName /* name of port, is pointer to GPIO_Type */
#define %'ModuleName'%.PinNumber  %'PinNumber'u   /* number of pin, type unsigned integer */

static const gpio_pin_config_t %'ModuleName'%.configOutput = {
  kGPIO_DigitalOutput,  /* use as output pin */
  1,  /* initial value */
};

static const gpio_pin_config_t %'ModuleName'%.configInput = {
  kGPIO_DigitalInput,  /* use as input pin */
  0,  /* initial value */
};

static bool %'ModuleName'%.isOutput = false;
%-
%-BW_CUSTOM_VARIABLE_END
%-BW_INTERN_METHOD_DECL_START
%- List of internal methods headers
%-BW_INTERN_METHOD_DECL_END
%-BW_IMPLEMENT_START
%-************************************************************************************************************
%-BW_METHOD_BEGIN ClrVal
%ifdef ClrVal
%include Common\SDK_BitIOClrVal.Inc
void %'ModuleName'%.%ClrVal(void)
{
  GPIO_ClearPinsOutput(%'ModuleName'%.PortName, 1<<%'ModuleName'%.PinNumber);
}

%endif %- ClrVal
%-BW_METHOD_END ClrVal
%-************************************************************************************************************
%-BW_METHOD_BEGIN SetVal
%ifdef SetVal
%include Common\SDK_BitIOSetVal.Inc
void %'ModuleName'%.%SetVal(void)
{
  GPIO_SetPinsOutput(%'ModuleName'%.PortName, 1<<%'ModuleName'%.PinNumber);
}

%endif %- SetVal
%-BW_METHOD_END SetVal
%-************************************************************************************************************
%-BW_METHOD_BEGIN NegVal
%ifdef NegVal
%include Common\SDK_BitIONegVal.Inc
void %'ModuleName'%.%NegVal(void)
{
  GPIO_TogglePinsOutput(%'ModuleName'%.PortName, 1<<%'ModuleName'%.PinNumber);
}

%endif %- NegVal
%-BW_METHOD_END NegVal
%-************************************************************************************************************
%-BW_METHOD_BEGIN GetVal
%ifdef GetVal
%define! RetVal
%include Common\SDK_BitIOGetVal.Inc
bool %'ModuleName'%.%GetVal(void)
{
  return GPIO_ReadPinInput(%'ModuleName'%.PortName, %'ModuleName'%.PinNumber)!=0;
}

%endif %- GetVal
%-BW_METHOD_END GetVal
%-************************************************************************************************************
%-BW_METHOD_BEGIN GetDir
%ifdef GetDir
%define! RetVal
%include Common\SDK_BitIOGetDir.Inc
bool %'ModuleName'%.%GetDir(void)
{
  return %'ModuleName'%.isOutput;
}

%endif %- GetDir
%-BW_METHOD_END GetDir
%-************************************************************************************************************
%-BW_METHOD_BEGIN SetDir
%ifdef SetDir
%define! ParDir
%include Common\SDK_BitIOSetDir.Inc
void %'ModuleName'%.%SetDir(bool Dir)
{
  if (Dir) {
    %'ModuleName'%.%SetOutput();
  } else {
    %'ModuleName'%.%SetInput();
  }
}

%endif %- SetDir
%-BW_METHOD_END SetDir
%-************************************************************************************************************
%-BW_METHOD_BEGIN SetInput
%ifdef SetInput
%include Common\SDK_BitIOSetInput.Inc
void %'ModuleName'%.%SetInput(void)
{
  GPIO_PinInit(%'ModuleName'%.PortName, %'ModuleName'%.PinNumber, &%'ModuleName'%.configInput);
  %'ModuleName'%.isOutput = false;
}

%endif %- SetInput
%-BW_METHOD_END SetInput
%-************************************************************************************************************
%-BW_METHOD_BEGIN SetOutput
%ifdef SetOutput
%include Common\SDK_BitIOSetOutput.Inc
void %'ModuleName'%.%SetOutput(void)
{
  GPIO_PinInit(%'ModuleName'%.PortName, %'ModuleName'%.PinNumber, &%'ModuleName'%.configOutput);
  %'ModuleName'%.isOutput = true;
}

%endif %- SetOutput
%-BW_METHOD_END SetOutput
%-************************************************************************************************************
%-BW_METHOD_BEGIN PutVal
%ifdef PutVal
%define! ParVal
%include Common\SDK_BitIOPutVal.Inc
void %'ModuleName'%.%PutVal(bool Val)
{
  if (Val) {
    GPIO_SetPinsOutput(%'ModuleName'%.PortName, 1<<%'ModuleName'%.PinNumber);
  } else {
    GPIO_ClearPinsOutput(%'ModuleName'%.PortName, 1<<%'ModuleName'%.PinNumber);
  }
}

%endif %- PutVal
%-BW_METHOD_END PutVal
%-************************************************************************************************************
%-BW_METHOD_BEGIN Init
%ifdef Init
%include Common\SDK_BitIOInit.Inc
void %'ModuleName'%.%Init(void)
{
  %'ModuleName'%.%SetOutput();
}

%endif %- Init
%-BW_METHOD_END Init
%-************************************************************************************************************
%-BW_METHOD_BEGIN Deinit
%ifdef Deinit
%include Common\SDK_BitIODeinit.Inc
void %'ModuleName'%.%Deinit(void)
{
  /* nothing needed */
}

%endif %- Deinit
%-BW_METHOD_END Deinit
%-************************************************************************************************************
%-BW_IMPLEMENT_END
/* END %ModuleName. */

%include Common\Header.End
%-
%-
%-BW_EVENT_IMPLEMENT_START
%-BW_EVENT_IMPLEMENT_END
%INITIALIZATION
  /* ### %DeviceType "%DeviceName" init code ... */
%CODE_BEGIN
  /* Write code here ... */
%CODE_END
%-
%ENABLE
%CODE_BEGIN
%CODE_END
%-
%else %- Language (& Compiler)
  %error^ This component is not implemented in selected language & compiler !
%endif %- Language (& Compiler)
%DEBUG
%ALL_SYMBOLS
%-
